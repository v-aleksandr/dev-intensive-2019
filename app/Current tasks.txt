*CircleImageView (+1)

Реализуй CustomView с названием класса CircleImageView и кастомными xml атрибутами cv_borderColor (цвет границы
(format="color") по умолчанию white) и cv_borderWidth (ширина границы (format="dimension") по умолчанию 2dp).
CircleImageView должна превращать установленное изображение в круглое изображение с цветной рамкой, у CircleImageView
должны быть реализованы методы @Dimension getBorderWidth():Int, setBorderWidth(@Dimension dp:Int), getBorderColor():Int,
setBorderColor(hex:String), setBorderColor(@ColorRes colorId: Int). Используй CircleImageView как ImageView для аватара
пользователя (@id/iv_avatar)

------------------------------------------------------------------------------------------------------------------------
*SplashTheme (+1)
Необходимо реализовать тему, отображаемую при загрузке приложения до момента создания Activity

Реализуй SplashTheme в соответствии с макетами (@style/SplahTheme). Необходимо реализовать ее отображение при запуске
приложения до момента создания Activity. Как только Activity будет создана, необходимо установить AppTheme

------------------------------------------------------------------------------------------------------------------------
*firstName + lastName = nickName (+1)
Необходимо реализовать преобразование firstName и lastName пользователя в его nickName

Реализуй Profile.nickName как вычисляемое свойство из имени и фамилии пользователя, возвращающее значение псевдонима
пользователя в виде транслитерированной строки с заменой пробела на "_"
Пример:
Profile: firsName = "Женя", lastName = "Стереотипов"; Profile.nickName //Zhenya_Stereotipov
(Используй реализованный ранее метод Utils.transliteration)

------------------------------------------------------------------------------------------------------------------------
*Text Input Layout error (+1)
Необходимо реализовать вадидацию вводимых пользователем данных в поле @id/et_repository на соответствие url валидному
github аккаунту

Реализуй валидацию вводимых пользователем данных в поле @id/et_repository на соответствие url валидному github аккаунту,
вводимое значение может быть пустой строкой или должно содержать домен github.com (https://, www, https://www) и аккаунт
пользователя (пути для исключения прикреплены в ресурсах урока). Если URL невалиден, выводить сообщение "Невалидный
адрес репозитория" в TextInputLayout (wr_repository.error(message)) и запрещать сохранение невалидного значения в
SharedPreferences (при попытке сохранить невалидное поле очищать et_repository при нажатии @id/btn_edit)
Пример:
https://github.com/johnDoe //валиден
https://www.github.com/johnDoe //валиден
www.github.com/johnDoe //валиден
github.com/johnDoe //валиден
https://anyDomain.github.com/johnDoe //невалиден
https://github.com/ //невалиден
https://github.com //невалиден
https://github.com/johnDoe/tree //невалиден
https://github.com/johnDoe/tree/something //невалиден
https://github.com/enterprise //невалиден
https://github.com/pricing //невалиден
https://github.com/join //невалиден

------------------------------------------------------------------------------------------------------------------------
**Преобразование Инициалов в Drawable (+3)
Необходимо реализовать программное преобразование инициалов пользователя в Drawable с цветным фоном и буквами

Реализуй программное преобразование инициалов пользователя (если доступны - заполнено хотя бы одно поле) в Drawable с
фоном colorAccent (c учетом темы) и буквами инициалов (colorWhite) и установи полученное изображение как изображение по
умолчанию для профиля пользователя

------------------------------------------------------------------------------------------------------------------------